<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTruoc.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnSau.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PMoAAAAASUVORK5CYII=
</value>
  </data>
</root>