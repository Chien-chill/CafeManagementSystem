<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnChecked.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAXZJREFUWEftlU8rRFEchocZssFCkgUJZazIxqQs1ZQFxdJCLCU+gm8gS7FS2Fr6
        BEpZWLNQViQbQv5ez+/Oe2ZOKV2aMyX3qadmzvs7552Ze7uTSUn5V0RRlMUiDmipdlDah0doPGC3ovBQ
        toj31uwxrDgclLThQVxX4QlXNRIOSvrxzBo97BLkNRIOSgp4bY3iAzewQSPhoGQWH9Fxh5OKw0LRPL5b
        q7jCEcXJYMMELmGrlhLB/Ay+ocOuf6/iZLBhEN03uMSiom+xOXy2TeIY2xUnh0159H9Cu3nWsE4jXyAb
        R3uwOE6xRfHPYfMU3thJHruY00gZ1nrw1gbEBXYq/j0c0oGHdqLHPmY1YjNNeGKBsA9dvWc8h+Vw2072
        2FRs+VZpKcYuQUFRdeHg9biiwjIulF6WmdN49eHwetyLa0q8oj3PHTsaDQcljej+Sn3OsVljYaGoC/07
        /gVHFdcGCqfRPe1WtFxbKB7CMb1NSUn562Qyn510PE0pY2qaAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="MSS.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>112, 17</value>
  </metadata>
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QBERAEREAREQH//Z
</value>
  </data>
</root>