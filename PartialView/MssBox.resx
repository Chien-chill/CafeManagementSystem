<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>